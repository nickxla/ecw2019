import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class HelloWorld{
    
    private static String bytesToHex(byte[] paramArrayOfByte) {
    StringBuffer stringBuffer = new StringBuffer();
    for (byte b = 0; b < paramArrayOfByte.length; b++) {
      String str = Integer.toHexString(0xFF & paramArrayOfByte[b]);
      if (str.length() == 1) stringBuffer.append('0'); 
      stringBuffer.append(str);
    } 
    return stringBuffer.toString();
  }
    
    private static byte[] hmac(byte[] paramArrayOfByte) {
    try {
      MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");
      return messageDigest.digest(paramArrayOfByte);
    }
    catch (NoSuchAlgorithmException noSuchAlgorithmException) {
      System.out.println(noSuchAlgorithmException);
      return null;
    } 
  }
    
    private static byte[] build_header(long paramLong, byte[] paramArrayOfByte) {
    byte[] arrayOfByte1 = new byte[42 + paramArrayOfByte.length];// + 64];
    arrayOfByte1[0] = 1;
    arrayOfByte1[1] = (byte)(int)(paramLong >> 56 & 0xFFL);
    arrayOfByte1[2] = (byte)(int)(paramLong >> 48 & 0xFFL);
    arrayOfByte1[3] = (byte)(int)(paramLong >> 40 & 0xFFL);
    arrayOfByte1[4] = (byte)(int)(paramLong >> 32 & 0xFFL);
    arrayOfByte1[5] = (byte)(int)(paramLong >> 24 & 0xFFL);
    arrayOfByte1[6] = (byte)(int)(paramLong >> 16 & 0xFFL);
    arrayOfByte1[7] = (byte)(int)(paramLong >> 8 & 0xFFL);
    arrayOfByte1[8] = (byte)(int)(paramLong >> 0 & 0xFFL);
    byte[] arrayOfByte2 = hmac(paramArrayOfByte);
    System.arraycopy(arrayOfByte2, 0, arrayOfByte1, 9, arrayOfByte2.length);
   
    arrayOfByte1[41] = (byte)paramArrayOfByte.length;
     System.out.println(bytesToHex(new byte[] { arrayOfByte1[41] }));
    System.arraycopy(paramArrayOfByte, 0, arrayOfByte1, 42, paramArrayOfByte.length);
    //System.arraycopy(this.secret_key, 0, arrayOfByte1, 42 + paramArrayOfByte.length, this.secret_key.length);
    return arrayOfByte1;
  }
    
     public static void main(String []args){
        byte[] arr = build_header(1, new byte[] {0, 3, 1});
        System.out.println(bytesToHex(arr));
        //System.out.println(arr.length);
        for (byte b : arr) {
            //System.out.println(Integer.toBinaryString(b & 255 | 256).substring(1));
        }
     }
}
