#!/usr/bin/python

import binascii
from hashlib import sha256

host = '176.31.135.50'
port = 20001

def hmac(paramByteArray):
    return sha256(paramByteArray).digest()

def cast(b):
    return bytearray([b & 0xFF])

def getSecretKey():
    secretKey = [43, 77, -70, 58, -108, -39, -41, 118, -28, -5, -73, -105, -71, -15, -28, -83, -27, 1, 34, -101, -35, -56, -51, -10, 99, 59, 112, -105, 123, 5, 43, -28, 107, -65, -98, 123, -115, 122, -84, -36, 69, -32, 84, 27, 88, -9, 55, -62, 99, -91, -77, 82, 91, -11, 119, 103, -80, 84, 52, 119, 29, 11, -4, 120]
    arr = bytearray()
    for b in secretKey:
        arr.extend(cast(b))
    return arr

def buildHeader(paramLong, paramByteArray):
    arrayOfBytes = bytearray()
    arrayOfBytes.append(1)
    arrayOfBytes.append(paramLong >> 56 & 0xFFL)
    arrayOfBytes.append(paramLong >> 48 & 0xFFL)
    arrayOfBytes.append(paramLong >> 40 & 0xFFL)
    arrayOfBytes.append(paramLong >> 32 & 0xFFL)
    arrayOfBytes.append(paramLong >> 24 & 0xFFL)
    arrayOfBytes.append(paramLong >> 16 & 0xFFL)
    arrayOfBytes.append(paramLong >> 8 & 0xFFL)
    arrayOfBytes.append(paramLong >> 0 & 0xFFL)
    arrayOfBytes.extend(hmac(paramByteArray))
    arrayOfBytes.extend(bytearray([len(paramByteArray)]))
    arrayOfBytes.extend(paramByteArray)
    arrayOfBytes.extend(getSecretKey())
    print(binascii.hexlify(arrayOfBytes))

buildHeader(1, bytearray([0, 3, 1]))
